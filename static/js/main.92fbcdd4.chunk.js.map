{"version":3,"sources":["components/Header.jsx","components/PokemonCard.jsx","App.js","index.js"],"names":["Header","categoryHandler","optionsHandler","categoryOptionsList","searchHandler","searchInputHandler","className","name","id","onChange","value","src","alt","action","onSubmit","type","placeholder","PokemonCard","Name","infoURL","useState","info","updateInfo","toUpperCase","slice","useEffect","fetch","then","res","json","data","typeString","types","forEach","el","push","imageURL","sprites","front_default","join","weight","hp","stats","base_stat","attack","defense","specialAttack","specialDefense","speed","catch","console","log","App","fetchURL","updateURL","List","updateList","category","updateCategory","categoryOptions","setCategoryOptions","optionsURL","setOptionsURL","cardRenderURL","setCardRenderURL","searchValue","setSearchValue","results","map","url","pokemon","pokemon_species","val","target","event","preventDefault","err","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92fbcdd4.chunk.js","sourcesContent":["const Header = ({ categoryHandler, optionsHandler, categoryOptionsList, searchHandler, searchInputHandler }) => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<div>\r\n\t\t\t\t<div className='select select-1'>\r\n\t\t\t\t\t<select name='category' id='category-menu' onChange={categoryHandler}>\r\n\t\t\t\t\t\t<option value='all'>All</option>\r\n\t\t\t\t\t\t<option value='type'>Type</option>\r\n\t\t\t\t\t\t<option value='habitat'>Habitat</option>\r\n\t\t\t\t\t\t<option value='ability'>Ability</option>\r\n\t\t\t\t\t\t<option value='color'>Colour</option>\r\n\t\t\t\t\t\t<option value='shape'>Shape</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='select select-2'>\r\n\t\t\t\t\t<select name='category' id='category-menu' onChange={optionsHandler}>\r\n\t\t\t\t\t\t{categoryOptionsList}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='title-container'>\r\n\t\t\t\t<img src='https://cdn.bulbagarden.net/upload/4/4b/Pok%C3%A9dex_logo.png' alt='' />\r\n\t\t\t</div>\r\n\t\t\t<h5>Or</h5>\r\n\t\t\t<form action='' onSubmit={searchHandler}>\r\n\t\t\t\t<input type='text' placeholder='Enter the name of a pokemon' onChange={searchInputHandler} />\r\n\t\t\t\t<button type='submit'>Search</button>\r\n\t\t\t</form>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst PokemonCard = ({ Name, infoURL }) => {\r\n\tlet [info, updateInfo] = useState('');\r\n\r\n\tName = Name[0].toUpperCase() + Name.slice(1);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(infoURL)\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tlet typeString = [];\r\n\t\t\t\tdata.types.forEach(el => {\r\n\t\t\t\t\ttypeString.push(el.type.name[0].toUpperCase() + el.type.name.slice(1));\r\n\t\t\t\t});\r\n\t\t\t\tupdateInfo({\r\n\t\t\t\t\timageURL: data.sprites.front_default,\r\n\t\t\t\t\ttype: typeString.join(', '),\r\n\t\t\t\t\tweight: data.weight,\r\n\t\t\t\t\thp: data.stats[0].base_stat,\r\n\t\t\t\t\tattack: data.stats[1].base_stat,\r\n\t\t\t\t\tdefense: data.stats[2].base_stat,\r\n\t\t\t\t\tspecialAttack: data.stats[3].base_stat,\r\n\t\t\t\t\tspecialDefense: data.stats[4].base_stat,\r\n\t\t\t\t\tspeed: data.stats[5].base_stat,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(console.log);\r\n\t}, [infoURL]);\r\n\r\n\treturn (\r\n\t\t<div className='pokemon-card'>\r\n\t\t\t<div className='img-wrapper'>\r\n\t\t\t\t<img src={info.imageURL} alt='' />\r\n\t\t\t</div>\r\n\t\t\t<h2>{Name}</h2>\r\n\t\t\t<h4>Weight: {info.weight}</h4>\r\n\t\t\t<h4>Type: {info.type}</h4>\r\n\t\t\t<h4>Stats:</h4>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>HP: {info.hp}</li>\r\n\t\t\t\t<li>Attack: {info.attack}</li>\r\n\t\t\t\t<li>Defense: {info.defense}</li>\r\n\t\t\t\t<li>Special Attack: {info.specialAttack}</li>\r\n\t\t\t\t<li>Special Defense: {info.specialDefense}</li>\r\n\t\t\t\t<li>Speed: {info.speed}</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PokemonCard;\r\n","import { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport PokemonCard from './components/PokemonCard';\n\nfunction App() {\n\tlet [fetchURL, updateURL] = useState('https://pokeapi.co/api/v2/pokemon?limit=100&offset=0');\n\tlet [List, updateList] = useState();\n\tlet [category, updateCategory] = useState('all');\n\tlet [categoryOptions, setCategoryOptions] = useState('Select an option');\n\tlet [optionsURL, setOptionsURL] = useState();\n\tlet [cardRenderURL, setCardRenderURL] = useState();\n\tlet [searchValue, setSearchValue] = useState();\n\n\tfunction handleCategory(val) {\n\t\tupdateCategory(val.target.value);\n\n\t\tswitch (val.target.value) {\n\t\t\tcase 'all':\n\t\t\t\tupdateURL('https://pokeapi.co/api/v2/pokemon?limit=100&offset=0');\n\t\t\t\tbreak;\n\n\t\t\tcase 'type':\n\t\t\t\tupdateURL('https://pokeapi.co/api/v2/type/');\n\t\t\t\tbreak;\n\n\t\t\tcase 'habitat':\n\t\t\t\tupdateURL('https://pokeapi.co/api/v2/pokemon-habitat/');\n\t\t\t\tbreak;\n\n\t\t\tcase 'ability':\n\t\t\t\tupdateURL('https://pokeapi.co/api/v2/ability/');\n\t\t\t\tbreak;\n\n\t\t\tcase 'color':\n\t\t\t\tupdateURL('https://pokeapi.co/api/v2/pokemon-color');\n\t\t\t\tbreak;\n\n\t\t\tcase 'shape':\n\t\t\t\tupdateURL('https://pokeapi.co/api/v2/pokemon-shape');\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.log('This is from lineeee: 43');\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tfunction handleOptions(action) {\n\t\toptionsURL.forEach(el => {\n\t\t\tif (el.name === action.target.value) {\n\t\t\t\tsetCardRenderURL(el.url);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction handleSearch(event) {\n\t\tevent.preventDefault();\n\n\t\tfetch(`https://pokeapi.co/api/v2/pokemon/${searchValue}`)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data =>\n\t\t\t\tupdateList([<PokemonCard key={searchValue} Name={searchValue} infoURL={`https://pokeapi.co/api/v2/pokemon/${searchValue}`} />])\n\t\t\t)\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tupdateList(<h1>The pokemon '{searchValue}' does not exist in the pokedex</h1>);\n\t\t\t});\n\t}\n\n\tfunction handleSearchInput(event) {\n\t\tsetSearchValue(event.target.value);\n\t}\n\n\tuseEffect(() => {\n\t\tfetch(fetchURL)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tif (category === 'all') {\n\t\t\t\t\tsetCategoryOptions(<option>Select a category</option>);\n\t\t\t\t\tupdateList(data.results.map(el => <PokemonCard key={el.name} Name={el.name} infoURL={el.url} />));\n\t\t\t\t} else {\n\t\t\t\t\tsetOptionsURL(data.results);\n\t\t\t\t\tsetCategoryOptions(\n\t\t\t\t\t\tdata.results.map(el => (\n\t\t\t\t\t\t\t<option key={el.name} value={el.name}>\n\t\t\t\t\t\t\t\t{el.name}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(console.log);\n\t}, [fetchURL, category]);\n\n\tuseEffect(() => {\n\t\tfetch(cardRenderURL)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tif (category === 'type' || category === 'ability') {\n\t\t\t\t\tupdateList(data.pokemon.map(el => <PokemonCard key={el.pokemon.name} Name={el.pokemon.name} infoURL={el.pokemon.url} />));\n\t\t\t\t} else if (category === 'habitat' || category === 'color' || category === 'shape') {\n\t\t\t\t\tupdateList(\n\t\t\t\t\t\tdata.pokemon_species.map(el => (\n\t\t\t\t\t\t\t<PokemonCard key={el.name} Name={el.name} infoURL={`https://pokeapi.co/api/v2/pokemon/${el.name}`} />\n\t\t\t\t\t\t))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(console.log);\n\t}, [cardRenderURL, category]);\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Header\n\t\t\t\tcategoryHandler={handleCategory}\n\t\t\t\toptionsHandler={handleOptions}\n\t\t\t\tcategoryOptionsList={categoryOptions}\n\t\t\t\tsearchHandler={handleSearch}\n\t\t\t\tsearchInputHandler={handleSearchInput}\n\t\t\t/>\n\t\t\t<div className='card-container'>{List}</div>\n\t\t\t<footer>\n\t\t\t\t<p>\n\t\t\t\t\tCreated by <a href='https://linktr.ee/pulkit_jasti'>Pulkit Jasti</a> | Source:{' '}\n\t\t\t\t\t<a href='https://github.com/pulkit-jasti'>GitHub</a> (Star the repo please)\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tAPI Used: <a href='https://pokeapi.co/'>https://pokeapi.co/</a>\n\t\t\t\t</p>\n\t\t\t</footer>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.min.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}